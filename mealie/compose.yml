services:
  mealie:
    image: ghcr.io/mealie-recipes/mealie:v2.6.0
    container_name: mealie
    restart: always
    deploy:
      resources:
        limits:
          memory: 1000M
    volumes:
      - mealie-data:/app/data/
      - /homelab/traefik/certs/root-ca.crt:/ca/root-ca.crt
    environment:
      # Set Backend ENV Variables Here
      ALLOW_SIGNUP: "false"
      PUID: 1000
      PGID: 1000
      TZ: Europe/Parie
      BASE_URL: https://mealie.my.home.com
      # Database Settings
      DB_ENGINE: postgres
      POSTGRES_USER: mealie
      POSTGRES_PASSWORD: mealie
      POSTGRES_SERVER: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: mealie
      # Optional OIDC Settings
      OIDC_AUTH_ENABLED: true
      OIDC_SIGNUP_ENABLED: true
      OIDC_CONFIGURATION_URL: https://authentik.my.home.com/application/o/mealie/.well-known/openid-configuration
      OIDC_CLIENT_ID: 
      OIDC_CLIENT_SECRET: 
      OIDC_PROVIDER_NAME: "Authentik"
      OIDC_TLS_CACERTFILE: /ca/root-ca.crt
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-proxy
      - traefik.http.routers.mealie.rule=Host(`mealie.my.home.com`)
      - traefik.http.routers.mealie.entrypoints=websecure
      - traefik.http.services.mealie.loadbalancer.server.port=9000
    networks:
      - traefik-proxy
      - backend

  postgres:
    container_name: mealie-db
    image: postgres:15
    restart: always
    volumes:
      - mealie-pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: mealie
      POSTGRES_USER: mealie
      PGUSER: mealie
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - backend

volumes:
  mealie-data:
  mealie-pgdata:

networks:
  traefik-proxy:
    external: true
  backend: {}
